---
import { Transformer } from 'markmap-lib'

export interface Props {
  diagram: string
}

const { diagram } = Astro.props
const transformer = new Transformer();

// 1. transform markdown
const { root, features } = transformer.transform(diagram)

// 2. get assets
// either get assets required by used features
const { styles, scripts } = transformer.getUsedAssets(features)

// or get all possible assets that could be used later
// const { styles, scripts } = transformer.getAssets(features)
---
<script is:inline src="https://cdn.jsdelivr.net/npm/d3@6"></script>
<script is:inline src="https://cdn.jsdelivr.net/npm/markmap-view"></script>
<script define:vars={{ root, styles, scripts }}>
const { markmap } = window;

const { Markmap, loadCSS, loadJS } = markmap;

// 1. load assets
if (styles) loadCSS(styles);
if (scripts) loadJS(scripts, { getMarkmap: () => markmap });

// 2. create markmap
// `options` is optional, i.e. `undefined` can be passed here
Markmap.create('#markmap', undefined, root);
</script>

<svg id="markmap" style="width: 600px; height: 600px"></svg>
