---
import { Icon } from 'astro-icon'
import type { MarkdownInstance, Page, PaginateFunction } from 'astro'
import type { Frontmatter } from '../../config'
import { SiteMetadata, PAGE_SIZE } from '../../config'
import Base from '../../layouts/base.astro'
import PageHero from '../../components/pagehero.astro'
import BlogRoll from '../../components/blogroll.astro'

export interface Props {
  page: Page<MarkdownInstance<Frontmatter>>
}

// const { id } = Astro.params
const { page } = Astro.props

const frontmatter: Frontmatter = {
  title: 'Blog' + (page.size < page.total ? '(page ' + page.currentPage + ')' : ''),
  description:
    'Showing articles [' +
    page.start +
    '-' +
    page.end +
    '] (total ' +
    page.total +
    ')',
  coverSVG: '../svg/undraw/undraw_my_feed.svg',
  socialImage: '/images/undraw/undraw_my_feed.png',
  publishDate: SiteMetadata.buildTime,
}

export async function getStaticPaths({ paginate }: { paginate: PaginateFunction }) {
  const allPosts = (await Astro.glob(
    '../blog/*.{md,mdx}'
  )) as MarkdownInstance<Frontmatter>[]
  const posts = allPosts
    .sort(
      (a, b) =>
        new Date(b.frontmatter.publishDate).valueOf() -
        new Date(a.frontmatter.publishDate).valueOf()
    )
    .filter(post => !post.frontmatter.draft)

  return paginate(posts, { pageSize: PAGE_SIZE })
}
---

<Base frontmatter={frontmatter}>
  <header>
    <PageHero
      title={frontmatter.title}
      description={frontmatter.description}
      coverSVG={frontmatter.coverSVG}
      socialImage={frontmatter.socialImage}
    >
      {
        page.size < page.total && (
          <div class="mt-8">
            <nav
              class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px"
              aria-label="Pagination"
            >
              <a
                href={
                  page.url.prev &&
                  import.meta.env.BASE_URL + page.url.prev.slice(1)
                }
                class:list={[
                  'relative inline-flex items-center px-2 py-2 rounded-l-md border text-sm font-medium',
                  page.url.prev
                    ? 'border-purple-300 bg-white text-gray-500 hover:bg-purple-100 dark:border-purple-700 dark:bg-gray-900 dark:text-gray-300 dark:hover:bg-purple-900'
                    : 'border-gray-300 bg-gray-300 text-gray-400 dark:border-gray-700 dark:bg-gray-700 dark:text-gray-500',
                ]}
              >
                <span class="sr-only">Previous</span>
                <Icon
                  class="h-5 w-5"
                  pack="heroicons-solid"
                  name="chevron-left"
                />
              </a>
              {Array.from(
                { length: page.lastPage },
                (_, index) => index + 1
              ).map(i => (
                <a
                  href={import.meta.env.BASE_URL + 'blog/' + (i > 1 ? i : '')}
                  aria-current="page"
                  class:list={[
                    i == page.currentPage
                      ? 'z-10 bg-pink-100 border-purple-500 text-purple-600 dark:bg-pink-900 dark:border-pink-500 dark:text-purple-200'
                      : 'bg-white border-purple-300 text-gray-500 hover:bg-purple-100 dark:bg-gray-900 dark:border-purple-700 dark:text-gray-300 dark:hover:bg-purple-900',
                    'relative inline-flex items-center px-4 py-2 border text-sm font-medium',
                  ]}
                >
                  {i}
                </a>
              ))}
              <a
                href={
                  page.url.next &&
                  import.meta.env.BASE_URL + page.url.next.slice(1)
                }
                class:list={[
                  'relative inline-flex items-center px-2 py-2 rounded-r-md border text-sm font-medium',
                  page.url.next
                    ? 'border-purple-300 bg-white text-gray-500 hover:bg-purple-100 dark:border-purple-700 dark:bg-gray-900 dark:text-gray-300 dark:hover:bg-purple-900'
                    : 'border-gray-300 bg-gray-300 text-gray-400 dark:border-gray-700 dark:bg-gray-700 dark:text-gray-500',
                ]}
              >
                <span class="sr-only">Next</span>
                <Icon
                  class="h-5 w-5"
                  pack="heroicons-solid"
                  name="chevron-right"
                />
              </a>
            </nav>
          </div>
        )
      }
    </PageHero>
  </header>
  <main class="mt-10 bg-gray-100 dark:bg-gray-900">
    <BlogRoll posts={page.data} />
  </main>
</Base>
